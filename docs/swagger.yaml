basePath: /
definitions:
  models.User:
    properties:
      aadhar_card_number:
        description: User's Aadhar card number (Indian ID)
        type: string
      branch:
        description: The branch where the user is associated
        type: string
      city:
        description: City where the user resides
        type: string
      contact_number:
        description: User's contact number
        type: string
      created_at:
        description: Timestamp when the user was created
        type: string
      current_address:
        description: User's current address
        type: string
      driving_license_number:
        description: User's driving license number
        type: string
      email:
        description: User's email address
        type: string
      emergency_first_name:
        description: First name of the user's emergency contact
        type: string
      emergency_last_name:
        description: Last name of the user's emergency contact
        type: string
      first_name:
        description: User's first name
        type: string
      id:
        description: Unique identifier for the user (Primary Key)
        type: integer
      last_name:
        description: User's last name
        type: string
      pan_card_number:
        description: User's PAN card number (Indian tax ID)
        type: string
      password:
        description: User's password (should be hashed in a real application)
        type: string
      permanent_address:
        description: User's permanent address
        type: string
      pincode:
        description: Pincode for the user's address
        type: string
      state:
        description: State where the user resides
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a fleetloom server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: fleetloom API
  version: "1.0"
paths:
  /User:
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a new user
      tags:
      - User
  /User/{id}:
    delete:
      description: Remove a user from the system by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
          schema:
            type: string
        "400":
          description: Invalid user ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Delete a user by ID
      tags:
      - User
    get:
      description: Retrieve details of a specific user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Invalid user ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Get a user by ID
      tags:
      - User
    put:
      consumes:
      - application/json
      description: Update an existing user's details by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated User Info
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated successfully
          schema:
            type: string
        "400":
          description: Invalid user ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Update a user by ID
      tags:
      - User
swagger: "2.0"
